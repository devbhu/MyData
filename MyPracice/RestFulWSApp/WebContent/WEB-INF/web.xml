<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	 <display-name>RestServiceApp</display-name>
    
     <context-param>
        <param-name>resteasy.scan</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>resteasy.scan.providers</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>resteasy.scan.resources</param-name>
        <param-value>false</param-value>
    </context-param>
    
    
	<servlet>

		<servlet-name>MyRestApp</servlet-name>

		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>

		  <init-param>

			<param-name>jersey.config.server.provider.classnames</param-name>
			<param-value>org.glassfish.jersey.server.filter.RolesAllowedDynamicFeature</param-value>

		</init-param> 
		<init-param>
		<param-name>jersey.config.server.provider.packages</param-name>
		<param-value>com.test.messenger.resource,com.test.handle.exception,com.test.authentication.basic</param-value>
		</init-param>

		 <init-param>

			<param-name>jersey.config.server.provider.scanning.recursive</param-name>
			<param-value>true</param-value>

		</init-param> 
		
	<!-- 	<init-param>
		   <param-name>javax.ws.rs.container.ContainerRequestFilter</param-name>
		   <param-value>com.test.authentication.basic.AuthFilter</param-value>
		</init-param> -->
		
		<!-- <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.rest.app.service.ApplicationConfig</param-value>
        </init-param> -->

	</servlet>

	<servlet-mapping>

		<servlet-name>MyRestApp</servlet-name>
		<url-pattern>/messenger/*</url-pattern>

	</servlet-mapping>
	<!-- Commented the security-constraint since i'm going to initialize the security context from Custom AuthFilter that implements ContainerRequestFilter from JAX-RS-->
	<!-- We can initialize the securityContext either by ContainerRequestFilter or by using <security-constraint/> in web.xml and the security context is responsible to check for the roles that are allowed to the resource to be accessed. The roles are alloted to users. -->
	
	<!--  <security-constraint>
         <web-resource-collection>
             <web-resource-name>Messages</web-resource-name>
             <url-pattern>/messenger/*</url-pattern>
         </web-resource-collection>
         <auth-constraint>
             <role-name>admin</role-name> 
         </auth-constraint>
    </security-constraint>
    
     <security-constraint>
         <web-resource-collection>
             <web-resource-name>Messages123</web-resource-name>
             <url-pattern>/messenger/comments/*</url-pattern>
         </web-resource-collection>
         <auth-constraint>
             <role-name>associate</role-name> 
         </auth-constraint>
    </security-constraint>  -->
  
   
<!--   <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>ApplicationRealm</realm-name>
    </login-config>
        
     <security-role>
        <role-name>associate</role-name>
    </security-role>
    
       <security-role>
        <role-name>admin</role-name>
    </security-role>  -->
    
</web-app>